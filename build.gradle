/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'Arun.Menon' at '3/28/17 9:03 AM' with Gradle 2.11
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/2.11/userguide/tutorial_java_projects.html
 */

repositories {
    maven {
        url "http://10.155.20.176:8081/artifactory/smartamer_repo"
    }
}
// In this section you declare where to find the dependencies of your project
buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath(
            'org.unbroken-dome.gradle-plugins:gradle-testsets-plugin:1.2.0',
                'io.spring.gradle:dependency-management-plugin:1.0.0.RELEASE',
                'org.akhikhl.gretty:gretty:+'
        )
    }
}

// Apply the java plugin to add support for Java
apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.unbroken-dome.test-sets'
apply plugin: 'org.akhikhl.gretty'


testSets {
     integrationTest { dirName = 'integration-test' }
     endToEndTest { dirName = 'end-to-end-test' }
}

check.dependsOn integrationTest
integrationTest.mustRunAfter test
check.dependsOn endToEndTest
endToEndTest.mustRunAfter integrationTest

tasks.withType(Test) {
    reports.html.destination = file("${reporting.baseDir}/${name}")
}

// In this section you declare the dependencies for your production and test code
dependencies {
    compile(
            'org.slf4j:slf4j-api',
            'org.springframework:spring-aspects',
            'org.springframework:spring-context-support',
            'org.springframework:spring-webmvc',
    )
    providedCompile(
            'javax.servlet:javax.servlet-api'
    )
    runtime(
            'javax.servlet:jstl',
            'log4j:log4j',
            'org.slf4j:slf4j-log4j12',
            'org.slf4j:jcl-over-slf4j',
    )
    testCompile(
            'javax.el:javax.el-api',
            'org.glassfish.web:el-impl:2.2',
            'junit:junit',
            'de.bechte.junit:junit-hierarchicalcontextrunner:4.12.1',
            'org.hamcrest:hamcrest-library',
            'org.assertj:assertj-core:3.5.2',
            'org.springframework:spring-test'
    )
    endToEndTestCompile(
            'org.seleniumhq.selenium:selenium-java:3.1.0'
    )
}

test {
    testLogging {
        showStandardStreams = true
    }
}

integrationTest {
    useJUnit {
        includeCategories 'org.arunm.IntegrationTest'
    }
    testLogging {
        showStandardStreams = true
    }
}

endToEndTest {
    useJUnit {
        includeCategories 'org.arunm.intermediate.EndToEndTest'
    }
    testLogging {
        showStandardStreams = true
    }
}
gretty {
    httpPort = 8081
    contextPath = '/'
    servletContainer = 'jetty9.3'
    integrationTestTask = 'endToEndTest'
}
